import React, { useState, useEffect } from 'react';\nimport { useAuth } from '../contexts/AuthContext';\nimport '../styles/verification.css';\n\nconst Verification = () => {\n  const { user, token } = useAuth();\n  const [verificationType, setVerificationType] = useState('kyc');\n  const [formData, setFormData] = useState({\n    full_name: '',\n    date_of_birth: '',\n    company_name: '',\n    vat_number: '',\n    registration_number: '',\n  });\n  const [verificationStatus, setVerificationStatus] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n\n  // Fetch verification status on component mount\n  useEffect(() => {\n    fetchVerificationStatus();\n  }, [verificationType]);\n\n  const fetchVerificationStatus = async () => {\n    try {\n      const response = await fetch(\n        `${process.env.REACT_APP_API_URL}/verification/status?verification_type=${verificationType}`,\n        {\n          headers: { Authorization: `Bearer ${token}` },\n        }\n      );\n      if (response.ok) {\n        const data = await response.json();\n        setVerificationStatus(data);\n      }\n    } catch (err) {\n      console.error('Error fetching verification status:', err);\n    }\n  };\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value,\n    }));\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    setError('');\n    setSuccess('');\n\n    try {\n      const payload = {\n        verification_type: verificationType,\n        ...formData,\n      };\n\n      const response = await fetch(\n        `${process.env.REACT_APP_API_URL}/verification/submit`,\n        {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${token}`,\n          },\n          body: JSON.stringify(payload),\n        }\n      );\n\n      if (response.ok) {\n        const data = await response.json();\n        setVerificationStatus(data);\n        setSuccess('Verifica sottomessa con successo!');\n        setFormData({\n          full_name: '',\n          date_of_birth: '',\n          company_name: '',\n          vat_number: '',\n          registration_number: '',\n        });\n      } else {\n        const errorData = await response.json();\n        setError(errorData.detail || 'Errore nella sottomissione della verifica.');\n      }\n    } catch (err) {\n      setError('Errore di connessione. Riprova più tardi.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const getStatusBadgeClass = (status) => {\n    switch (status) {\n      case 'approved':\n        return 'badge-success';\n      case 'rejected':\n        return 'badge-danger';\n      case 'pending':\n        return 'badge-warning';\n      default:\n        return 'badge-secondary';\n    }\n  };\n\n  return (\n    <div className=\"verification-container\">\n      <h1>Verifica Identità (KYC/KYB)</h1>\n      \n      {/* Verification Type Selector */}\n      <div className=\"verification-type-selector\">\n        <label>\n          <input\n            type=\"radio\"\n            value=\"kyc\"\n            checked={verificationType === 'kyc'}\n            onChange={(e) => setVerificationType(e.target.value)}\n          />\n          KYC (Verifica Personale)\n        </label>\n        <label>\n          <input\n            type=\"radio\"\n            value=\"kyb\"\n            checked={verificationType === 'kyb'}\n            onChange={(e) => setVerificationType(e.target.value)}\n          />\n          KYB (Verifica Aziendale)\n        </label>\n      </div>\n\n      {/* Current Status */}\n      {verificationStatus && (\n        <div className=\"verification-status\">\n          <h3>Stato Attuale della Verifica</h3>\n          <p>\n            <strong>Status:</strong>{' '}\n            <span className={`badge ${getStatusBadgeClass(verificationStatus.status)}`}>\n              {verificationStatus.status.toUpperCase()}\n            </span>\n          </p>\n          <p><strong>Creata il:</strong> {new Date(verificationStatus.created_at).toLocaleDateString()}</p>\n          {verificationStatus.expires_at && (\n            <p><strong>Scade il:</strong> {new Date(verificationStatus.expires_at).toLocaleDateString()}</p>\n          )}\n        </div>\n      )}\n\n      {/* Verification Form */}\n      {!verificationStatus || verificationStatus.status === 'rejected' ? (\n        <form onSubmit={handleSubmit} className=\"verification-form\">\n          {verificationType === 'kyc' && (\n            <>\n              <div className=\"form-group\">\n                <label htmlFor=\"full_name\">Nome Completo</label>\n                <input\n                  type=\"text\"\n                  id=\"full_name\"\n                  name=\"full_name\"\n                  value={formData.full_name}\n                  onChange={handleInputChange}\n                  required\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"date_of_birth\">Data di Nascita</label>\n                <input\n                  type=\"date\"\n                  id=\"date_of_birth\"\n                  name=\"date_of_birth\"\n                  value={formData.date_of_birth}\n                  onChange={handleInputChange}\n                  required\n                />\n              </div>\n            </>\n          )}\n\n          {verificationType === 'kyb' && (\n            <>\n              <div className=\"form-group\">\n                <label htmlFor=\"company_name\">Nome Azienda</label>\n                <input\n                  type=\"text\"\n                  id=\"company_name\"\n                  name=\"company_name\"\n                  value={formData.company_name}\n                  onChange={handleInputChange}\n                  required\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"vat_number\">Partita IVA</label>\n                <input\n                  type=\"text\"\n                  id=\"vat_number\"\n                  name=\"vat_number\"\n                  value={formData.vat_number}\n                  onChange={handleInputChange}\n                  required\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"registration_number\">Numero di Registrazione</label>\n                <input\n                  type=\"text\"\n                  id=\"registration_number\"\n                  name=\"registration_number\"\n                  value={formData.registration_number}\n                  onChange={handleInputChange}\n                  required\n                />\n              </div>\n            </>\n          )}\n\n          {error && <div className=\"alert alert-danger\">{error}</div>}\n          {success && <div className=\"alert alert-success\">{success}</div>}\n\n          <button type=\"submit\" disabled={loading} className=\"btn btn-primary\">\n            {loading ? 'Sottomissione in corso...' : 'Sottometti Verifica'}\n          </button>\n        </form>\n      ) : (\n        <div className=\"verification-pending\">\n          <p>La tua verifica è in corso. Ti contatteremo una volta completata la revisione.</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Verification;\n"
